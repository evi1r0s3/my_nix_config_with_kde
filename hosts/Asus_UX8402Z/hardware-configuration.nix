# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
      ./nvidia.nix
      ./thunderbolt.nix
    ];

  boot.initrd.availableKernelModules = [ "xhci_pci" "thunderbolt" "nvme" "usb_storage" "sd_mod" "rtsx_pci_sdmmc" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-intel" ];
  boot.extraModulePackages = [ ];

  fileSystems."/" =
    { device = "/dev/disk/by-uuid/98e74215-9bb9-4850-9cd2-2219c1c1f529";
      fsType = "btrfs";
      options = [ "subvol=root" "compress=zstd" "noatime" ];
    };

  boot.initrd.luks.devices."pool0_0" = { 
    device = "/dev/disk/by-uuid/ca9c465b-6cee-407e-8627-f438fd143e12";
    allowDiscards = true;
  };
 

  fileSystems."/home" =
    { device = "/dev/disk/by-uuid/98e74215-9bb9-4850-9cd2-2219c1c1f529";
      fsType = "btrfs";
      options = [ "subvol=home/active" "compress=zstd" "noatime" ];
    };

  fileSystems."/home/.snapshots" =
    { device = "/dev/disk/by-uuid/98e74215-9bb9-4850-9cd2-2219c1c1f529";
      fsType = "btrfs";
      options = [ "subvol=home/snapshots" "compress=zstd" "noatime" ];
    };

  fileSystems."/nix" =
    { device = "/dev/disk/by-uuid/98e74215-9bb9-4850-9cd2-2219c1c1f529";
      fsType = "btrfs";
      options = [ "subvol=nix" "compress=zstd" "noatime" ];
    };

  fileSystems."/persist" =
    { device = "/dev/disk/by-uuid/98e74215-9bb9-4850-9cd2-2219c1c1f529";
      fsType = "btrfs";
      options = [ "subvol=persist/active" "compress=zstd" "noatime" ];
      neededForBoot = true;
    };

  fileSystems."/persist/.snapshots" =
    { device = "/dev/disk/by-uuid/98e74215-9bb9-4850-9cd2-2219c1c1f529";
      fsType = "btrfs";
      options = [ "subvol=persist/snapshots" "compress=zstd" "noatime" ];
    };

  fileSystems."/var/local" =
    { device = "/dev/disk/by-uuid/98e74215-9bb9-4850-9cd2-2219c1c1f529";
      fsType = "btrfs";
      options = [ "subvol=var_local/active" "compress=zstd" "noatime" ];
    };

  fileSystems."/var/local/.snapshots" =
    { device = "/dev/disk/by-uuid/98e74215-9bb9-4850-9cd2-2219c1c1f529";
      fsType = "btrfs";
      options = [ "subvol=var_local/snapshots" "compress=zstd" "noatime" ];
    };

  fileSystems."/var/log" =
    { device = "/dev/disk/by-uuid/98e74215-9bb9-4850-9cd2-2219c1c1f529";
      fsType = "btrfs";
      options = [ "subvol=var_log" "compress=zstd" "noatime" ];
      neededForBoot = true;
    };

  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/427D-79D9";
      fsType = "vfat";
      #options = [ "fmask=0022" "dmask=0022" ];
    };

  swapDevices = [ 
   { device = "/dev/disk/by-uuid/fd05ba75-2508-4c10-9723-e7ed5f2adb14"; } 
  ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.eth0.useDHCP = lib.mkDefault true;
  # networking.interfaces.tun0.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlo1.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
